{"map":"{\"version\":3,\"sources\":[\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Enums\\\\MessageDirection.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\Chatbot\\\\MessageBox.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\Chatbot\\\\MessagesList.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\Chatbot\\\\Input.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\Chatbot\\\\index.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\App.tsx\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\serviceWorker.ts\",\"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\index.tsx\"],\"names\":[\"MessageDirection\",\"Incoming\",\"Outgoing\",\"MessageBox\",\"_React$Component\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"value\",\"button\",\"event\",\"props\",\"onTriggerEvent\",\"onSendMessage\",\"payload\",\"_this\",\"react\",\"className\",\"message\",\"direction\",\"DocumentCard\",\"style\",\"backgroundColor\",\"float\",\"width\",\"margin\",\"DocumentCardDetails\",\"DocumentCardActivity\",\"activity\",\"people\",\"name\",\"member\",\"username\",\"profileImageSrc\",\"DocumentCardTitle\",\"title\",\"text\",\"showAsSecondaryTitle\",\"buttons\",\"length\",\"Stack\",\"gap\",\"padding\",\"map\",\"PrimaryButton\",\"onClick\",\"_buttonClick\",\"bind\",\"React\",\"MessagesList\",\"call\",\"MessageBox_MessageBox\",\"messages\",\"m\",\"_renderMessage\",\"Input\",\"state\",\"e\",\"setState\",\"target\",\"preventDefault\",\"_this2\",\"TextField\",\"autoFocus\",\"onChange\",\"type\",\"placeholder\",\"onSubmit\",\"client\",\"ApiAiClient\",\"accessToken\",\"Chatbot\",\"scrollToBottom\",\"window\",\"scrollTo\",\"document\",\"body\",\"scrollHeight\",\"_decodeMessage\",\"text2\",\"replace\",\"JSON\",\"parse\",\"SendMessage\",\"_showMessage\",\"textRequest\",\"then\",\"_handleQueryResponse\",\"assertThisInitialized\",\"catch\",\"error\",\"console\",\"log\",\"TriggerEvent\",\"eventRequest\",\"alert\",\"push\",\"response\",\"result\",\"fulfillment\",\"forEach\",\"speech\",\"MessagesList_MessagesList\",\"Input_Input\",\"App\",\"react_default\",\"a\",\"createElement\",\"marginBottom\",\"Controls_Chatbot_Chatbot\",\"Component\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"export const MessageDirection = {\\r\\n    Incoming : 0,\\r\\n    Outgoing: 1\\r\\n}\\r\\n\\r\\nexport default MessageDirection;\",\"import * as React from \\\"react\\\";\\r\\nimport MessageDirection from \\\"../../Enums/MessageDirection\\\";\\r\\nimport { Persona, PersonaSize, PersonaPresence, DocumentCard, DocumentCardDetails, DocumentCardTitle, DocumentCardActivity, PrimaryButton, Stack } from \\\"office-ui-fabric-react\\\";\\r\\n\\r\\nexport class MessageBox extends React.Component<any, any> {\\r\\n\\r\\n    private _renderMessage() {\\r\\n\\r\\n    }\\r\\n\\r\\n    private _buttonClick(button: any) {\\r\\n\\r\\n        if (button.event) {\\r\\n            if (this.props.onTriggerEvent)\\r\\n                this.props.onTriggerEvent(button);\\r\\n        }\\r\\n        else\\r\\n            if (this.props.onSendMessage)\\r\\n                this.props.onSendMessage(button.payload);\\r\\n    }\\r\\n\\r\\n    render(): JSX.Element {\\r\\n        //var className = this.props.message.direction == MessageDirection.Incoming ? \\\"Messages-message\\\" : \\\"Messages-message currentMember\\\";\\r\\n        return (\\r\\n            <div className=\\\"ms-Grid-col ms-sm12\\\">\\r\\n                {this.props.message.direction == MessageDirection.Incoming ?\\r\\n                    <DocumentCard\\r\\n                        style={{ 'backgroundColor': '#f4f7f9', 'float': 'left', 'width': '100%', 'margin': 10 }} >\\r\\n                        <DocumentCardDetails>\\r\\n                            <DocumentCardActivity\\r\\n                                activity=\\\"0 minutes ago\\\"\\r\\n                                people={[{ name: this.props.message.member.username, profileImageSrc: '' }]}\\r\\n                            />\\r\\n                            <DocumentCardTitle className='message-box-text' title={this.props.message.text} showAsSecondaryTitle={true} />\\r\\n                            {this.props.message.buttons && this.props.message.buttons.length > 0 &&\\r\\n                                <Stack gap={10} padding={10}>\\r\\n                                    {this.props.message.buttons.map((button: any) => {\\r\\n                                        return <PrimaryButton onClick={this._buttonClick.bind(this, button)} text={button.title}></PrimaryButton>\\r\\n                                    })}\\r\\n                                </Stack>\\r\\n                            }\\r\\n                            <div></div>\\r\\n                        </DocumentCardDetails>\\r\\n                    </DocumentCard>\\r\\n                    : <DocumentCard style={{ 'backgroundColor': '#f4f9f8', 'float': 'right', 'width': '100%', 'margin': 10 }}>\\r\\n                        <DocumentCardDetails>\\r\\n                            <DocumentCardActivity\\r\\n                                activity=\\\"10 minutes ago\\\"\\r\\n                                people={[{ name: 'Me', profileImageSrc: '' }]}\\r\\n                            />\\r\\n                            <DocumentCardTitle title={this.props.message.text} showAsSecondaryTitle={true} />\\r\\n                        </DocumentCardDetails>\\r\\n                    </DocumentCard>}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"import * as React from \\\"react\\\";\\r\\nimport { MessageBox } from \\\"./MessageBox\\\";\\r\\n\\r\\nexport class MessagesList extends React.Component<any, any> {\\r\\n    constructor(props: any) {\\r\\n        super(props);\\r\\n    }\\r\\n    private _renderMessage(message: any) {\\r\\n        return (\\r\\n            <MessageBox onSendMessage={this.props.onSendMessage} onTriggerEvent={this.props.onTriggerEvent} message={message}></MessageBox>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    render(): JSX.Element {\\r\\n        return (\\r\\n            <div className=\\\"ms-Grid-row\\\" >\\r\\n                {this.props.messages.map((m: any) => this._renderMessage(m))}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"import * as React from \\\"react\\\";\\r\\nimport { TextField, PrimaryButton } from \\\"office-ui-fabric-react\\\";\\r\\n\\r\\nexport class Input extends React.Component<any, any> {\\r\\n\\r\\n    constructor(props: any) {\\r\\n        super(props);\\r\\n\\r\\n        this.state = {\\r\\n            text: \\\"\\\"\\r\\n        }\\r\\n    }\\r\\n\\r\\n    onChange(e: any) {\\r\\n        this.setState({ text: e.target.value });\\r\\n    }\\r\\n\\r\\n    onSubmit(e: any) {\\r\\n        e.preventDefault();\\r\\n        this.setState({ text: \\\"\\\" });\\r\\n        this.props.onSendMessage(this.state.text);\\r\\n    }\\r\\n\\r\\n    render(): JSX.Element {\\r\\n        return (\\r\\n            <div className=\\\"ms-Grid-row\\\">\\r\\n                <div className=\\\"ms-Grid-col ms-sm12\\\">\\r\\n                    <div style={{ 'float': 'left', 'width': 'calc(100% - 80px)' }}>\\r\\n                        <TextField\\r\\n                            autoFocus={true}\\r\\n                            onChange={e => this.onChange(e)}\\r\\n                            value={this.state.text}\\r\\n                            type=\\\"multiline\\\"\\r\\n                            placeholder=\\\"Enter your message and click Send\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                    <PrimaryButton onClick={this.onSubmit.bind(this)} text=\\\"Send\\\"></PrimaryButton>\\r\\n                </div>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"//@ts-ignore\\r\\nimport * as React from \\\"react\\\";\\r\\nimport { MessagesList } from \\\"./MessagesList\\\";\\r\\n\\r\\nimport './Chatbot.css';\\r\\nimport { Input } from \\\"./Input\\\";\\r\\nimport MessageDirection from \\\"../../Enums/MessageDirection\\\";\\r\\nimport { ApiAiClient } from \\\"api-ai-javascript\\\";\\r\\n\\r\\nconst client = new ApiAiClient({ accessToken: 'ba8b1e5dad804cbfbd1bd9d1fcc08991' })\\r\\n\\r\\nexport class Chatbot extends React.Component<any, any> {\\r\\n    scrollToBottom = () => {\\r\\n        window.scrollTo(0, document.body.scrollHeight);\\r\\n    }\\r\\n\\r\\n\\r\\n    componentDidMount() {\\r\\n        this.scrollToBottom();\\r\\n    }\\r\\n\\r\\n    componentDidUpdate() {\\r\\n        this.scrollToBottom();\\r\\n    }\\r\\n\\r\\n    constructor(props: any) {\\r\\n        super(props);\\r\\n\\r\\n        client.eventRequest('Welcome')\\r\\n            .then(this._handleQueryResponse.bind(this))\\r\\n            .catch((error) => {\\r\\n                alert('error');\\r\\n                console.log(error);\\r\\n            })\\r\\n\\r\\n        this.state = {\\r\\n            messages: [\\r\\n\\r\\n            ],\\r\\n            member: {\\r\\n                username: 'Me'\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private _showMessage(message: any) {\\r\\n        let messages = this.state.messages;\\r\\n\\r\\n        messages.push(message);\\r\\n\\r\\n        this.setState({ messages: messages });\\r\\n    }\\r\\n\\r\\n    private _handleQueryResponse(response: any) {\\r\\n        if (response.result && response.result.fulfillment && response.result.fulfillment.messages) {\\r\\n            response.result.fulfillment.messages.forEach((m) => {\\r\\n                if (m.type == 4) {\\r\\n                    console.log(m);\\r\\n\\r\\n                    var message = m.payload;\\r\\n                    message.member = {\\r\\n                        username: \\\"Confession Bot\\\"\\r\\n                    };\\r\\n                    message.direction = MessageDirection.Incoming;\\r\\n\\r\\n                    this._showMessage(message);\\r\\n                }\\r\\n                else if (m.type == 0) {\\r\\n                    debugger;\\r\\n                    console.log(m);\\r\\n\\r\\n                    var message: any = this._decodeMessage(m.speech);\\r\\n                    message.member = {\\r\\n                        username: \\\"Confession Bot\\\"\\r\\n                    };\\r\\n                    message.direction = MessageDirection.Incoming;\\r\\n\\r\\n                    this._showMessage(message);\\r\\n                }\\r\\n            })\\r\\n        }\\r\\n    }\\r\\n\\r\\n    _decodeMessage = (text: string) => {\\r\\n        let message: any = {};\\r\\n        try {\\r\\n            let text2 = text.replace(/#\\\\(/g, \\\"{\\\").replace(/\\\\)#/g, \\\"}\\\");\\r\\n            message = JSON.parse(text2);\\r\\n        }\\r\\n        catch (e) {\\r\\n            message = {\\r\\n                \\\"text\\\": text\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    SendMessage = (message: string) => {\\r\\n        this._showMessage({\\r\\n            text: message,\\r\\n            member: this.state.member,\\r\\n            direction: MessageDirection.Outgoing\\r\\n        });\\r\\n\\r\\n        client.textRequest(message)\\r\\n            .then(this._handleQueryResponse.bind(this))\\r\\n            .catch((error) => {\\r\\n                console.log(error);\\r\\n            })\\r\\n    }\\r\\n\\r\\n    TriggerEvent = (message: any) => {\\r\\n        this._showMessage({\\r\\n            text: message.payload,\\r\\n            member: this.state.member,\\r\\n            direction: MessageDirection.Outgoing\\r\\n        });\\r\\n\\r\\n        client.eventRequest(message.event, {})\\r\\n            .then(this._handleQueryResponse.bind(this))\\r\\n            .catch((error) => {\\r\\n                console.log(error);\\r\\n            })\\r\\n    }\\r\\n\\r\\n    public render(): JSX.Element {\\r\\n        return (<div>\\r\\n            <MessagesList onSendMessage={this.SendMessage.bind(this)} onTriggerEvent={this.TriggerEvent.bind(this)} messages={this.state.messages}></MessagesList>\\r\\n            <Input onSendMessage={this.SendMessage}></Input>\\r\\n        </div>);\\r\\n    }\\r\\n}\\r\\n\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport {\\n  DocumentCard\\n} from \\\"office-ui-fabric-react/lib\\\";\\nimport { Chatbot } from './Controls/Chatbot';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n        <div className=\\\"ms-Grid-row\\\" style={{margin:'0px',marginBottom:'10px'}}>\\n          <div className=\\\"ms-Grid-col ms-sm12\\\">\\n\\n            <Chatbot></Chatbot>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\ntype Config = {\\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\\n};\\n\\nexport function register(config?: Config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(\\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\\n      window.location.href\\n    );\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl: string, config?: Config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport './Assets/fabric.css';\\nimport './Controls/Chatbot/Chatbot.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n \"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{35:function(e,t,n){},49:function(e,t,n){e.exports=n(58)},54:function(e,t,n){},55:function(e,t,n){},56:function(e,t,n){},58:function(e,t,n){\"use strict\";n.r(t);var s=n(0),a=n.n(s),o=n(25),r=n.n(o),i=(n(54),n(55),n(35),n(5)),c=n(10),l=n(9),u=n(6),m=n(8),g=(n(56),n(16)),d={Incoming:0,Outgoing:1},h=n(88),p=n(92),f=n(85),b=n(93),v=n(87),y=n(84),E=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"_renderMessage\",value:function(){}},{key:\"_buttonClick\",value:function(e){e.event?this.props.onTriggerEvent&&this.props.onTriggerEvent(e):this.props.onSendMessage&&this.props.onSendMessage(e.payload)}},{key:\"render\",value:function(){var e=this;return s.createElement(\"div\",{className:\"ms-Grid-col ms-sm12\"},this.props.message.direction==d.Incoming?s.createElement(h.a,{style:{backgroundColor:\"#f4f7f9\",float:\"left\",width:\"100%\",margin:10}},s.createElement(p.a,null,s.createElement(f.a,{activity:\"0 minutes ago\",people:[{name:this.props.message.member.username,profileImageSrc:\"\"}]}),s.createElement(b.a,{className:\"message-box-text\",title:this.props.message.text,showAsSecondaryTitle:!0}),this.props.message.buttons&&this.props.message.buttons.length>0&&s.createElement(v.a,{gap:10,padding:10},this.props.message.buttons.map(function(t){return s.createElement(y.a,{onClick:e._buttonClick.bind(e,t),text:t.title})})),s.createElement(\"div\",null))):s.createElement(h.a,{style:{backgroundColor:\"#f4f9f8\",float:\"right\",width:\"100%\",margin:10}},s.createElement(p.a,null,s.createElement(f.a,{activity:\"10 minutes ago\",people:[{name:\"Me\",profileImageSrc:\"\"}]}),s.createElement(b.a,{title:this.props.message.text,showAsSecondaryTitle:!0}))))}}]),t}(s.Component),O=function(e){function t(e){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).call(this,e))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"_renderMessage\",value:function(e){return s.createElement(E,{onSendMessage:this.props.onSendMessage,onTriggerEvent:this.props.onTriggerEvent,message:e})}},{key:\"render\",value:function(){var e=this;return s.createElement(\"div\",{className:\"ms-Grid-row\"},this.props.messages.map(function(t){return e._renderMessage(t)}))}}]),t}(s.Component),j=n(86),w=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).state={text:\"\"},n}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"onChange\",value:function(e){this.setState({text:e.target.value})}},{key:\"onSubmit\",value:function(e){e.preventDefault(),this.setState({text:\"\"}),this.props.onSendMessage(this.state.text)}},{key:\"render\",value:function(){var e=this;return s.createElement(\"div\",{className:\"ms-Grid-row\"},s.createElement(\"div\",{className:\"ms-Grid-col ms-sm12\"},s.createElement(\"div\",{style:{float:\"left\",width:\"calc(100% - 80px)\"}},s.createElement(j.a,{autoFocus:!0,onChange:function(t){return e.onChange(t)},value:this.state.text,type:\"multiline\",placeholder:\"Enter your message and click Send\"})),s.createElement(y.a,{onClick:this.onSubmit.bind(this),text:\"Send\"})))}}]),t}(s.Component),k=new(n(43).a)({accessToken:\"ba8b1e5dad804cbfbd1bd9d1fcc08991\"}),M=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).scrollToBottom=function(){window.scrollTo(0,document.body.scrollHeight)},n._decodeMessage=function(e){var t={};try{var n=e.replace(/#\\(/g,\"{\").replace(/\\)#/g,\"}\");t=JSON.parse(n)}catch(s){t={text:e}}return t},n.SendMessage=function(e){n._showMessage({text:e,member:n.state.member,direction:d.Outgoing}),k.textRequest(e).then(n._handleQueryResponse.bind(Object(g.a)(Object(g.a)(n)))).catch(function(e){console.log(e)})},n.TriggerEvent=function(e){n._showMessage({text:e.payload,member:n.state.member,direction:d.Outgoing}),k.eventRequest(e.event,{}).then(n._handleQueryResponse.bind(Object(g.a)(Object(g.a)(n)))).catch(function(e){console.log(e)})},k.eventRequest(\"Welcome\").then(n._handleQueryResponse.bind(Object(g.a)(Object(g.a)(n)))).catch(function(e){alert(\"error\"),console.log(e)}),n.state={messages:[],member:{username:\"Me\"}},n}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){this.scrollToBottom()}},{key:\"componentDidUpdate\",value:function(){this.scrollToBottom()}}]),Object(c.a)(t,[{key:\"_showMessage\",value:function(e){var t=this.state.messages;t.push(e),this.setState({messages:t})}},{key:\"_handleQueryResponse\",value:function(e){var t=this;e.result&&e.result.fulfillment&&e.result.fulfillment.messages&&e.result.fulfillment.messages.forEach(function(e){if(4==e.type)console.log(e),(n=e.payload).member={username:\"Confession Bot\"},n.direction=d.Incoming,t._showMessage(n);else if(0==e.type){var n;console.log(e),(n=t._decodeMessage(e.speech)).member={username:\"Confession Bot\"},n.direction=d.Incoming,t._showMessage(n)}})}},{key:\"render\",value:function(){return s.createElement(\"div\",null,s.createElement(O,{onSendMessage:this.SendMessage.bind(this),onTriggerEvent:this.TriggerEvent.bind(this),messages:this.state.messages}),s.createElement(w,{onSendMessage:this.SendMessage}))}}]),t}(s.Component),S=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"div\",{className:\"ms-Grid-row\",style:{margin:\"0px\",marginBottom:\"10px\"}},a.a.createElement(\"div\",{className:\"ms-Grid-col ms-sm12\"},a.a.createElement(M,null))))}}]),t}(s.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(a.a.createElement(S,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[49,1,2]]]);","extractedComments":[]}