{"ast":null,"code":"import { warn } from './warn';\n/**\r\n * Warns when two props which are mutually exclusive are both being used.\r\n *\r\n * @public\r\n * @param componentName - The name of the component being used.\r\n * @param props - The props passed into the component.\r\n * @param exclusiveMap - A map where the key is a parameter, and the value is the other parameter.\r\n */\n\nexport function warnMutuallyExclusive(componentName, props, exclusiveMap) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var propName in exclusiveMap) {\n      if (props && propName in props) {\n        var propInExclusiveMapValue = exclusiveMap[propName];\n\n        if (propInExclusiveMapValue && propInExclusiveMapValue in props) {\n          warn(componentName + \" property '\" + propName + \"' is mutually exclusive with '\" + exclusiveMap[propName] + \"'. Use one or the other.\");\n        }\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}