{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\nimport { TeachingBubbleContent } from './TeachingBubbleContent';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nvar getClassNames = classNamesFunction();\n\nvar TeachingBubbleBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TeachingBubbleBase, _super); // Constructor\n\n\n  function TeachingBubbleBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.rootElement = React.createRef();\n    _this.state = {};\n    _this._defaultCalloutProps = {\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n      directionalHint: DirectionalHint.rightCenter\n    };\n    return _this;\n  }\n\n  TeachingBubbleBase.prototype.focus = function () {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  };\n\n  TeachingBubbleBase.prototype.render = function () {\n    var _a = this.props,\n        setCalloutProps = _a.calloutProps,\n        targetElement = _a.targetElement,\n        onDismiss = _a.onDismiss,\n        isWide = _a.isWide,\n        styles = _a.styles,\n        theme = _a.theme;\n\n    var calloutProps = tslib_1.__assign({}, this._defaultCalloutProps, setCalloutProps);\n\n    var stylesProps = {\n      theme: theme,\n      isWide: isWide,\n      calloutClassName: calloutProps ? calloutProps.className : undefined\n    };\n    var classNames = getClassNames(styles, stylesProps);\n    var calloutStyles = classNames.subComponentStyles ? classNames.subComponentStyles.callout : undefined;\n    return React.createElement(Callout, tslib_1.__assign({\n      target: targetElement,\n      onDismiss: onDismiss\n    }, calloutProps, {\n      className: classNames.root,\n      styles: calloutStyles,\n      hideOverflow: true\n    }), React.createElement(\"div\", {\n      ref: this.rootElement\n    }, React.createElement(TeachingBubbleContent, tslib_1.__assign({}, this.props))));\n  };\n\n  TeachingBubbleBase.defaultProps = {\n    /**\r\n     * Default calloutProps is deprecated in favor of private `_defaultCalloutProps`.\r\n     * Remove in next release.\r\n     * @deprecated In favor of private `_defaultCalloutProps`.\r\n     */\n    calloutProps: {\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n      directionalHint: DirectionalHint.rightCenter\n    }\n  };\n  return TeachingBubbleBase;\n}(BaseComponent);\n\nexport { TeachingBubbleBase };","map":null,"metadata":{},"sourceType":"module"}