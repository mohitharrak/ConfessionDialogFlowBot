{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { Callout } from '../../../Callout';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { FocusTrapCallout } from '../../../Callout';\nexport var CardCallout = function CardCallout(props) {\n  var _a = props.gapSpace,\n      gapSpace = _a === void 0 ? 0 : _a,\n      _b = props.directionalHint,\n      directionalHint = _b === void 0 ? DirectionalHint.bottomLeftEdge : _b,\n      directionalHintFixed = props.directionalHintFixed,\n      targetElement = props.targetElement,\n      firstFocus = props.firstFocus,\n      trapFocus = props.trapFocus,\n      onLeave = props.onLeave,\n      className = props.className,\n      finalHeight = props.finalHeight,\n      content = props.content;\n\n  var calloutProps = tslib_1.__assign({}, getNativeProps(props, divProperties), {\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace\n  });\n\n  return React.createElement(React.Fragment, null, trapFocus ? React.createElement(FocusTrapCallout, tslib_1.__assign({}, calloutProps, {\n    focusTrapProps: {\n      forceFocusInsideTrap: false,\n      isClickableOutsideFocusTrap: true,\n      disableFirstFocus: !firstFocus\n    }\n  }), content) : React.createElement(Callout, tslib_1.__assign({}, calloutProps), content));\n};","map":null,"metadata":{},"sourceType":"module"}