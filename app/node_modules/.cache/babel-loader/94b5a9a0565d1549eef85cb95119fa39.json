{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\src\\\\Controls\\\\Chatbot\\\\index.tsx\";\n//@ts-ignore\nimport * as React from \"react\";\nimport { MessagesList } from \"./MessagesList\";\nimport './Chatbot.css';\nimport { Input } from \"./Input\";\nimport MessageDirection from \"../../Enums/MessageDirection\";\nimport { ApiAiClient } from \"api-ai-javascript\";\nvar client = new ApiAiClient({\n  accessToken: 'ba8b1e5dad804cbfbd1bd9d1fcc08991'\n});\nexport var Chatbot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chatbot, _React$Component);\n\n  function Chatbot(props) {\n    var _this;\n\n    _classCallCheck(this, Chatbot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chatbot).call(this, props));\n\n    _this.onSendMessage = function (message) {\n      var messages = _this.state.messages;\n      messages.push({\n        text: message,\n        member: _this.state.member,\n        direction: MessageDirection.Outgoing\n      });\n\n      _this.setState({\n        messages: messages\n      });\n\n      client.textRequest(message).then(_this._handleQueryResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)))).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    client.eventRequest('Welcome').then(_this._handleQueryResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)))).catch(function (error) {\n      console.log(error);\n    });\n    _this.state = {\n      messages: [],\n      member: {\n        username: 'Me'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Chatbot, [{\n    key: \"_showMessage\",\n    value: function _showMessage(message) {\n      var messages = this.state.messages;\n      messages.push(message);\n      this.setState({\n        messages: messages\n      });\n    }\n  }, {\n    key: \"_handleQueryResponse\",\n    value: function _handleQueryResponse(response) {\n      var _this2 = this;\n\n      if (response.result && response.result.fulfillment && response.result.fulfillment.messages) {\n        response.result.fulfillment.messages.forEach(function (m) {\n          if (m.type == 'custom_payload') {\n            console.log(m);\n            var message = m.payload;\n            message.member = {\n              username: \"Confession Bot\"\n            };\n            message.direction = MessageDirection.Incoming;\n\n            _this2._showMessage(message);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MessagesList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onSendMessage: this.onSendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chatbot;\n}(React.Component);","map":{"version":3,"sources":["E:\\Projects\\David MacDougall\\source code\\dialogflow-chatbot\\my-app\\src\\Controls\\Chatbot\\index.tsx"],"names":["React","MessagesList","Input","MessageDirection","ApiAiClient","client","accessToken","Chatbot","props","onSendMessage","message","messages","state","push","text","member","direction","Outgoing","setState","textRequest","then","_handleQueryResponse","bind","catch","error","console","log","eventRequest","username","response","result","fulfillment","forEach","m","type","payload","Incoming","_showMessage","Component"],"mappings":"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","sourcesContent":["//@ts-ignore\r\nimport * as React from \"react\";\r\nimport { MessagesList } from \"./MessagesList\";\r\n\r\nimport './Chatbot.css';\r\nimport { Input } from \"./Input\";\r\nimport MessageDirection from \"../../Enums/MessageDirection\";\r\nimport {ApiAiClient} from \"api-ai-javascript\";\r\n\r\nconst client = new ApiAiClient({accessToken: 'ba8b1e5dad804cbfbd1bd9d1fcc08991'})\r\n\r\nexport class Chatbot extends React.Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        client.eventRequest('Welcome')\r\n        .then(this._handleQueryResponse.bind(this))\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n        this.state = {\r\n            messages: [\r\n               \r\n            ],\r\n            member: {\r\n                username: 'Me'\r\n            }\r\n        }\r\n    }\r\n\r\n    private _showMessage(message:any){\r\n        let messages=this.state.messages;\r\n\r\n        messages.push(message);\r\n\r\n        this.setState({messages:messages});\r\n    }\r\n\r\n    private _handleQueryResponse(response:any){\r\n        if(response.result && response.result.fulfillment && response.result.fulfillment.messages){\r\n            response.result.fulfillment.messages.forEach((m)=>{\r\n                if(m.type=='custom_payload'){\r\n                    console.log(m);\r\n\r\n                    var message=m.payload;\r\n                    message.member={\r\n                        username: \"Confession Bot\"\r\n                    };\r\n                    message.direction= MessageDirection.Incoming;\r\n\r\n                    this._showMessage(message);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onSendMessage = (message: string) => {\r\n        const messages = this.state.messages\r\n        messages.push({\r\n            text: message,\r\n            member: this.state.member,\r\n            direction: MessageDirection.Outgoing\r\n        })\r\n        this.setState({ messages: messages })\r\n\r\n        client.textRequest(message)\r\n        .then(this._handleQueryResponse.bind(this))\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (<div>\r\n            <MessagesList messages={this.state.messages}></MessagesList>\r\n            <Input onSendMessage={this.onSendMessage}></Input>\r\n        </div>);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}