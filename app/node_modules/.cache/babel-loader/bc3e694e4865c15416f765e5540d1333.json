{"ast":null,"code":"import { HighContrastSelector, ScreenWidthMaxMedium, ScreenWidthMaxSmall, ScreenWidthMinMedium, getFocusStyle, getScreenSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar SingleLineTextStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden'\n};\nvar MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nvar MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\nexport var getStyles = function getStyles(props) {\n  var className = props.className,\n      theme = props.theme;\n  var overflowButtonFontSize = 16;\n  var chevronSmallFontSize = 8;\n  return {\n    root: ['ms-Breadcrumb', theme.fonts.medium, {\n      margin: '23px 0 1px'\n    }, className],\n    list: ['ms-Breadcrumb-list', {\n      whiteSpace: 'nowrap',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    listItem: ['ms-Breadcrumb-listItem', {\n      listStyleType: 'none',\n      margin: '0',\n      padding: '0',\n      display: 'flex',\n      position: 'relative',\n      alignItems: 'center'\n    }],\n    chevron: ['ms-Breadcrumb-chevron', {\n      color: theme.palette.neutralSecondary,\n      fontSize: theme.fonts.small.fontSize,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _a[MediumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _a[MinimumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _a)\n    }],\n    overflow: ['ms-Breadcrumb-overflow', {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    }],\n    overflowButton: ['ms-Breadcrumb-overflowButton', getFocusStyle(theme), SingleLineTextStyle, {\n      fontSize: overflowButtonFontSize,\n      height: '100%',\n      cursor: 'pointer',\n      selectors: (_b = {\n        ':hover': {\n          backgroundColor: theme.palette.neutralLighter\n        },\n        ':active': {\n          backgroundColor: theme.palette.neutralTertiaryAlt,\n          color: theme.semanticColors.bodyText\n        },\n        ':hover:active': {\n          // This seems unnecessary.\n          backgroundColor: theme.palette.neutralQuaternary\n        }\n      }, _b[MinimumScreenSelector] = {\n        padding: '4px 6px'\n      }, _b[MediumScreenSelector] = {\n        fontSize: theme.fonts.mediumPlus.fontSize\n      }, _b)\n    }],\n    itemLink: ['ms-Breadcrumb-itemLink', getFocusStyle(theme), SingleLineTextStyle, theme.fonts.xLarge, {\n      textDecoration: 'none',\n      color: theme.semanticColors.bodyText,\n      padding: '0 8px',\n      selectors: (_c = {\n        ':hover': {\n          backgroundColor: theme.semanticColors.menuItemBackgroundHovered,\n          color: 'initial',\n          cursor: 'pointer',\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        },\n        ':focus': {\n          color: theme.palette.neutralDark\n        },\n        ':active': {\n          backgroundColor: theme.palette.neutralTertiaryAlt,\n          color: theme.palette.neutralPrimary\n        }\n      }, _c[MediumScreenSelector] = theme.fonts.large, _c[MinimumScreenSelector] = [theme.fonts.medium], _c[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        outline: \"none\"\n      }, _c)\n    }],\n    item: ['ms-Breadcrumb-item', theme.fonts.xLarge, {\n      color: theme.semanticColors.bodyText,\n      padding: '0 8px',\n      selectors: {\n        ':hover': {\n          cursor: 'default'\n        }\n      }\n    }]\n  };\n\n  var _a, _b, _c, _d;\n};","map":null,"metadata":{},"sourceType":"module"}