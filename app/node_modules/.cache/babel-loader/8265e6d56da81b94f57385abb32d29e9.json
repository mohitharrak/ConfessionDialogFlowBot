{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { css, styled } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles as getCheckStyles } from '../Check/Check.styles';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { classNamesFunction } from '../../Utilities';\nvar getCheckClassNames = classNamesFunction();\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function DetailsRowCheckBase(props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.isSelected,\n      isSelected = _c === void 0 ? false : _c,\n      _d = props.anySelected,\n      anySelected = _d === void 0 ? false : _d,\n      _e = props.selected,\n      selected = _e === void 0 ? false : _e,\n      _f = props.isHeader,\n      isHeader = _f === void 0 ? false : _f,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      buttonProps = tslib_1.__rest(props, [\"isVisible\", \"canSelect\", \"isSelected\", \"anySelected\", \"selected\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\"]);\n\n  var isPressed = props.isSelected || props.selected;\n  var checkStyles = getCheckStyles({\n    theme: theme\n  });\n  var checkClassNames = getCheckClassNames(checkStyles, {\n    theme: theme\n  });\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: isPressed,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  return canSelect ? React.createElement(\"div\", tslib_1.__assign({}, buttonProps, {\n    role: \"checkbox\",\n    className: css(classNames.root, classNames.check, checkClassNames.checkHost),\n    \"aria-checked\": isPressed,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\"\n  }), React.createElement(Check, {\n    checked: isPressed\n  })) : React.createElement(\"div\", tslib_1.__assign({}, buttonProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n});","map":null,"metadata":{},"sourceType":"module"}