{"ast":null,"code":"import { AnimationClassNames, DefaultFontStyles, getFocusStyle, FontSizes, FontWeights, ZIndexes, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Nav',\n  linkText: 'ms-Nav-linkText',\n  compositeLink: 'ms-Nav-compositeLink',\n  link: 'ms-Nav-link',\n  chevronButton: 'ms-Nav-chevronButton',\n  chevronIcon: 'ms-Nav-chevron',\n  navItem: 'ms-Nav-navItem',\n  navItems: 'ms-Nav-navItems',\n  group: 'ms-Nav-group',\n  groupContent: 'ms-Nav-groupContent'\n};\nexport var buttonStyles = {\n  textContainer: {\n    overflow: 'hidden'\n  },\n  label: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    lineHeight: '36px'\n  }\n};\nexport var getStyles = function getStyles(props) {\n  var className = props.className,\n      theme = props.theme,\n      isOnTop = props.isOnTop,\n      isExpanded = props.isExpanded,\n      isGroup = props.isGroup,\n      isLink = props.isLink,\n      isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      isButtonEntry = props.isButtonEntry,\n      _a = props.navHeight,\n      navHeight = _a === void 0 ? 36 : _a,\n      position = props.position,\n      _b = props.leftPadding,\n      leftPadding = _b === void 0 ? 20 : _b,\n      _c = props.leftPaddingExpanded,\n      leftPaddingExpanded = _c === void 0 ? 28 : _c,\n      _d = props.rightPadding,\n      rightPadding = _d === void 0 ? 20 : _d;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, className, theme.fonts.medium, {\n      overflowY: 'auto',\n      userSelect: 'none',\n      WebkitOverflowScrolling: 'touch'\n    }, isOnTop && [{\n      position: 'absolute'\n    }, AnimationClassNames.slideRightIn40]],\n    linkText: [classNames.linkText, {\n      margin: '0 4px',\n      overflow: 'hidden',\n      verticalAlign: 'middle',\n      textAlign: 'left',\n      textOverflow: 'ellipsis'\n    }],\n    compositeLink: [classNames.compositeLink, {\n      display: 'block',\n      position: 'relative',\n      color: semanticColors.bodyText,\n      backgroundColor: semanticColors.bodyBackground\n    }, isExpanded && 'is-expanded', isSelected && 'is-selected', isDisabled && 'is-disabled', isDisabled && {\n      color: semanticColors.disabledText\n    }],\n    link: [classNames.link, getFocusStyle(theme), {\n      display: 'block',\n      position: 'relative',\n      height: navHeight + \"px\",\n      width: '100%',\n      lineHeight: navHeight + \"px\",\n      textDecoration: 'none',\n      cursor: 'pointer',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      paddingLeft: leftPadding,\n      paddingRight: rightPadding,\n      color: semanticColors.bodyText,\n      selectors: !isDisabled ? {\n        '.ms-Nav-compositeLink:hover &': {\n          backgroundColor: palette.neutralLighterAlt,\n          color: semanticColors.bodyText\n        }\n      } : {}\n    }, isSelected && {\n      color: palette.themePrimary,\n      backgroundColor: palette.neutralLighter,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }, isDisabled && {\n      color: semanticColors.disabledText\n    }, isButtonEntry && {\n      color: palette.themePrimary\n    }],\n    chevronButton: [classNames.chevronButton, getFocusStyle(theme), {\n      display: 'block',\n      fontWeight: FontWeights.regular,\n      fontSize: FontSizes.small,\n      textAlign: 'left',\n      lineHeight: navHeight + \"px\",\n      margin: '5px 0',\n      padding: \"0px, \" + rightPadding + \"px, 0px, \" + leftPaddingExpanded + \"px\",\n      border: 'none',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      cursor: 'pointer',\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      selectors: {\n        '&:visited': {\n          color: 'inherit'\n        },\n        '&:hover': {\n          color: semanticColors.bodyText,\n          backgroundColor: palette.neutralLighterAlt\n        },\n        '$compositeLink:hover &': {\n          color: semanticColors.bodyText,\n          backgroundColor: palette.neutralLighterAlt\n        }\n      }\n    }, isGroup && [{\n      width: '100%',\n      height: navHeight + \"px\",\n      borderBottom: \"1px solid \" + semanticColors.bodyDivider\n    }, DefaultFontStyles.large], isLink && [{\n      display: 'block',\n      width: leftPaddingExpanded - 2 + \"px\",\n      height: navHeight - 2 + \"px\",\n      position: 'absolute',\n      top: '1px',\n      left: position + \"px\",\n      zIndex: ZIndexes.Nav,\n      padding: 0,\n      margin: 0\n    }], isSelected && {\n      color: palette.themePrimary,\n      backgroundColor: palette.neutralLighterAlt,\n      selectors: {\n        '&:after': {\n          borderLeft: \"2px solid \" + palette.themePrimary,\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }\n      }\n    }],\n    chevronIcon: [classNames.chevronIcon, {\n      position: 'absolute',\n      left: '8px',\n      height: navHeight + \"px\",\n      lineHeight: navHeight + \"px\",\n      fontSize: '12px',\n      transition: 'transform .1s linear'\n    }, isExpanded && {\n      transform: 'rotate(-180deg)'\n    }, isLink && {\n      top: 0\n    }],\n    navItem: [classNames.navItem, {\n      padding: 0\n    }],\n    navItems: [classNames.navItems, {\n      listStyleType: 'none',\n      padding: 0\n    }],\n    group: [classNames.group, isExpanded && 'is-expanded'],\n    groupContent: [classNames.groupContent, {\n      display: 'none',\n      marginBottom: '40px'\n    }, AnimationClassNames.slideDownIn20, isExpanded && {\n      display: 'block'\n    }]\n  };\n};","map":null,"metadata":{},"sourceType":"module"}