{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\History.tsx\";\n//@ts-ignore\nimport * as React from \"react\";\nimport { HistoryService } from \"../Services/HistoryService\";\nexport var History =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(History, _React$Component);\n\n  function History(props) {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(History).call(this, props));\n    _this._historyService = new HistoryService();\n    _this.state = {\n      'history': []\n    };\n\n    _this._getHistory();\n\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"_getHistory\",\n    value: function _getHistory() {\n      var _this2 = this;\n\n      this._historyService.listAll().then(function (result) {\n        console.log(result);\n\n        _this2.setState({\n          'history': result\n        });\n      }, function (error) {\n        console.log(error); //alert(error.text());\n        // this.toastr.error('', error.text());\n        //this.displayAlertModal(error.text());\n\n        alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(DetailsList, {\n        items: items,\n        compact: isCompactMode,\n        columns: columns,\n        selectionMode: isModalSelection ? SelectionMode.multiple : SelectionMode.none,\n        setKey: \"set\",\n        layoutMode: DetailsListLayoutMode.justified,\n        isHeaderVisible: true,\n        selection: this._selection,\n        selectionPreservedOnEmptyClick: true,\n        onItemInvoked: this._onItemInvoked,\n        enterModalSelectionOnTouch: true,\n        ariaLabelForSelectionColumn: \"Toggle selection\",\n        ariaLabelForSelectAllCheckbox: \"Toggle selection for all items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return History;\n}(React.Component);","map":{"version":3,"sources":["E:\\Projects\\David MacDougall\\source code\\ConfessionDialogFlowBot\\app\\src\\Controls\\History.tsx"],"names":["React","HistoryService","History","props","_historyService","state","_getHistory","listAll","then","result","console","log","setState","error","alert","items","isCompactMode","columns","isModalSelection","SelectionMode","multiple","none","DetailsListLayoutMode","justified","_selection","_onItemInvoked","Component"],"mappings":";;;;;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAIA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAEI,mBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,iFAAMA,KAAN;AADoB,UADhBC,eACgB,GADkB,IAAIH,cAAJ,EAClB;AAGpB,UAAKI,KAAL,GAAa;AACT,iBAAW;AADF,KAAb;;AAIA,UAAKC,WAAL;;AAPoB;AAQvB;;AAVL;AAAA;AAAA,kCAY0B;AAAA;;AAClB,WAAKF,eAAL,CAAqBG,OAArB,GAA+BC,IAA/B,CACI,UAACC,MAAD,EAAiB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAAE,qBAAWH;AAAb,SAAd;AACH,OAJL,EAKI,UAAAI,KAAK,EAAI;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADK,CAEL;AACA;AACA;;AACAC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH,OAXL;AAcH;AA3BL;AAAA;AAAA,6BA6BiC;AACzB,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,WAAD;AACI,QAAA,KAAK,EAAEE,KADX;AAEI,QAAA,OAAO,EAAEC,aAFb;AAGI,QAAA,OAAO,EAAEC,OAHb;AAII,QAAA,aAAa,EAAEC,gBAAgB,GAAGC,aAAa,CAACC,QAAjB,GAA4BD,aAAa,CAACE,IAJ7E;AAKI,QAAA,MAAM,EAAC,KALX;AAMI,QAAA,UAAU,EAAEC,qBAAqB,CAACC,SANtC;AAOI,QAAA,eAAe,EAAE,IAPrB;AAQI,QAAA,SAAS,EAAE,KAAKC,UARpB;AASI,QAAA,8BAA8B,EAAE,IATpC;AAUI,QAAA,aAAa,EAAE,KAAKC,cAVxB;AAWI,QAAA,0BAA0B,EAAE,IAXhC;AAYI,QAAA,2BAA2B,EAAC,kBAZhC;AAaI,QAAA,6BAA6B,EAAC,gCAblC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAR;AAiBH;AA/CL;;AAAA;AAAA,EAA6BzB,KAAK,CAAC0B,SAAnC","sourcesContent":["//@ts-ignore\r\nimport * as React from \"react\";\r\nimport { HistoryService } from \"../Services/HistoryService\";\r\n\r\n\r\n\r\nexport class History extends React.Component<any, any> {\r\n    private _historyService: HistoryService = new HistoryService();\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'history': []\r\n        }\r\n\r\n        this._getHistory();\r\n    }\r\n\r\n    private _getHistory() {\r\n        this._historyService.listAll().then(\r\n            (result: any) => {\r\n                console.log(result);\r\n                this.setState({ 'history': result })\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                //alert(error.text());\r\n                // this.toastr.error('', error.text());\r\n                //this.displayAlertModal(error.text());\r\n                alert(error);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (<div>\r\n            <DetailsList\r\n                items={items}\r\n                compact={isCompactMode}\r\n                columns={columns}\r\n                selectionMode={isModalSelection ? SelectionMode.multiple : SelectionMode.none}\r\n                setKey=\"set\"\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                isHeaderVisible={true}\r\n                selection={this._selection}\r\n                selectionPreservedOnEmptyClick={true}\r\n                onItemInvoked={this._onItemInvoked}\r\n                enterModalSelectionOnTouch={true}\r\n                ariaLabelForSelectionColumn=\"Toggle selection\"\r\n                ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n            />\r\n        </div>);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}