{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\src\\\\Controls\\\\Chatbot\\\\MessageBox.tsx\";\nimport * as React from \"react\";\nimport MessageDirection from \"../../Enums/MessageDirection\";\nimport { DocumentCard, DocumentCardDetails, DocumentCardTitle, DocumentCardActivity, PrimaryButton, Stack } from \"office-ui-fabric-react\";\nexport var MessageBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageBox, _React$Component);\n\n  function MessageBox() {\n    _classCallCheck(this, MessageBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageBox).apply(this, arguments));\n  }\n\n  _createClass(MessageBox, [{\n    key: \"_renderMessage\",\n    value: function _renderMessage() {}\n  }, {\n    key: \"_buttonClick\",\n    value: function _buttonClick(button) {\n      if (button.event) {\n        if (this.props.onTriggerEvent) this.props.onTriggerEvent(button);\n      } else if (this.props.onSendMessage) this.props.onSendMessage(button.payload);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      //var className = this.props.message.direction == MessageDirection.Incoming ? \"Messages-message\" : \"Messages-message currentMember\";\n      return React.createElement(\"div\", {\n        className: \"ms-Grid-col ms-sm12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.message.direction == MessageDirection.Incoming ? React.createElement(DocumentCard, {\n        style: {\n          'backgroundColor': '#f4f7f9',\n          'float': 'left',\n          'width': '100%',\n          'margin': 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(DocumentCardDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(DocumentCardActivity, {\n        activity: \"0 minutes ago\",\n        people: [{\n          name: this.props.message.member.username,\n          profileImageSrc: ''\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(DocumentCardTitle, {\n        className: \"message-box-text\",\n        title: this.props.message.text,\n        showAsSecondaryTitle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), this.props.message.buttons && this.props.message.buttons.length > 0 && React.createElement(Stack, {\n        gap: 10,\n        padding: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.message.buttons.map(function (button) {\n        return React.createElement(PrimaryButton, {\n          onClick: _this._buttonClick.bind(_this, button),\n          text: button.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))) : React.createElement(DocumentCard, {\n        style: {\n          'backgroundColor': '#f4f9f8',\n          'float': 'right',\n          'width': '100%',\n          'margin': 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(DocumentCardDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(DocumentCardActivity, {\n        activity: \"10 minutes ago\",\n        people: [{\n          name: 'Me',\n          profileImageSrc: ''\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(DocumentCardTitle, {\n        title: this.props.message.text,\n        showAsSecondaryTitle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MessageBox;\n}(React.Component);","map":{"version":3,"sources":["E:\\Projects\\David MacDougall\\source code\\ConfessionDialogFlowBot\\app\\src\\Controls\\Chatbot\\MessageBox.tsx"],"names":["React","MessageDirection","DocumentCard","DocumentCardDetails","DocumentCardTitle","DocumentCardActivity","PrimaryButton","Stack","MessageBox","button","event","props","onTriggerEvent","onSendMessage","payload","message","direction","Incoming","name","member","username","profileImageSrc","text","buttons","length","map","_buttonClick","bind","title","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport MessageDirection from \"../../Enums/MessageDirection\";\r\nimport { Persona, PersonaSize, PersonaPresence, DocumentCard, DocumentCardDetails, DocumentCardTitle, DocumentCardActivity, PrimaryButton, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport class MessageBox extends React.Component<any, any> {\r\n\r\n    private _renderMessage() {\r\n\r\n    }\r\n\r\n    private _buttonClick(button: any) {\r\n\r\n        if (button.event) {\r\n            if (this.props.onTriggerEvent)\r\n                this.props.onTriggerEvent(button);\r\n        }\r\n        else\r\n            if (this.props.onSendMessage)\r\n                this.props.onSendMessage(button.payload);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        //var className = this.props.message.direction == MessageDirection.Incoming ? \"Messages-message\" : \"Messages-message currentMember\";\r\n        return (\r\n            <div className=\"ms-Grid-col ms-sm12\">\r\n                {this.props.message.direction == MessageDirection.Incoming ?\r\n                    <DocumentCard\r\n                        style={{ 'backgroundColor': '#f4f7f9', 'float': 'left', 'width': '100%', 'margin': 10 }} >\r\n                        <DocumentCardDetails>\r\n                            <DocumentCardActivity\r\n                                activity=\"0 minutes ago\"\r\n                                people={[{ name: this.props.message.member.username, profileImageSrc: '' }]}\r\n                            />\r\n                            <DocumentCardTitle className='message-box-text' title={this.props.message.text} showAsSecondaryTitle={true} />\r\n                            {this.props.message.buttons && this.props.message.buttons.length > 0 &&\r\n                                <Stack gap={10} padding={10}>\r\n                                    {this.props.message.buttons.map((button: any) => {\r\n                                        return <PrimaryButton onClick={this._buttonClick.bind(this, button)} text={button.title}></PrimaryButton>\r\n                                    })}\r\n                                </Stack>\r\n                            }\r\n                            <div></div>\r\n                        </DocumentCardDetails>\r\n                    </DocumentCard>\r\n                    : <DocumentCard style={{ 'backgroundColor': '#f4f9f8', 'float': 'right', 'width': '100%', 'margin': 10 }}>\r\n                        <DocumentCardDetails>\r\n                            <DocumentCardActivity\r\n                                activity=\"10 minutes ago\"\r\n                                people={[{ name: 'Me', profileImageSrc: '' }]}\r\n                            />\r\n                            <DocumentCardTitle title={this.props.message.text} showAsSecondaryTitle={true} />\r\n                        </DocumentCardDetails>\r\n                    </DocumentCard>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}