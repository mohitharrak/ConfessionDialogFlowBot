{"ast":null,"code":"import { AnimationVariables, getFocusStyle, getGlobalClassNames, HighContrastSelector, normalize, FontSizes, FontWeights } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text'\n};\n\nvar linkStyles = function linkStyles(props) {\n  var rootIsLarge = props.rootIsLarge,\n      rootIsTabs = props.rootIsTabs,\n      theme = props.theme;\n  var _a = props.theme,\n      palette = _a.palette,\n      semanticColors = _a.semanticColors;\n  return [{\n    color: semanticColors.actionLink,\n    display: 'inline-block',\n    fontSize: FontSizes.medium,\n    fontWeight: FontWeights.regular,\n    lineHeight: '40px',\n    marginRight: '8px',\n    padding: '0 8px',\n    textAlign: 'center',\n    position: 'relative',\n    backgroundColor: 'transparent',\n    border: 0,\n    selectors: (_b = {\n      ':before': {\n        backgroundColor: 'transparent',\n        bottom: 0,\n        content: '\"\"',\n        height: '2px',\n        left: '8px',\n        position: 'absolute',\n        right: '8px',\n        transition: \"background-color \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2\n      },\n      ':after': {\n        color: 'transparent',\n        content: 'attr(title)',\n        display: 'block',\n        fontWeight: FontWeights.bold,\n        height: '1px',\n        overflow: 'hidden',\n        visibility: 'hidden'\n      },\n      ':hover': {\n        color: semanticColors.actionLinkHovered,\n        cursor: 'pointer'\n      },\n      ':focus': {\n        outline: 'none'\n      }\n    }, _b[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n      outline: \"1px solid \" + semanticColors.focusBorder\n    }, _b)\n  }, rootIsLarge && {\n    fontSize: FontSizes.large\n  }, rootIsTabs && [getFocusStyle(theme), {\n    marginRight: 0,\n    height: '40px',\n    lineHeight: '40px',\n    backgroundColor: palette.neutralLighter,\n    padding: '0 10px',\n    verticalAlign: 'top',\n    selectors: (_c = {\n      ':focus': {\n        outlineOffset: '-1px'\n      }\n    }, _c[\".\" + IsFocusVisibleClassName + \" &:focus::before\"] = {\n      height: 'auto',\n      background: 'transparent',\n      transition: 'none'\n    }, _c)\n  }]];\n\n  var _b, _c;\n};\n\nexport var getStyles = function getStyles(props) {\n  var className = props.className,\n      rootIsLarge = props.rootIsLarge,\n      rootIsTabs = props.rootIsTabs,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, normalize, {\n      fontSize: FontSizes.medium,\n      fontWeight: FontWeights.regular,\n      position: 'relative',\n      color: palette.themePrimary,\n      whiteSpace: 'nowrap'\n    }, rootIsLarge && classNames.rootIsLarge, rootIsTabs && classNames.rootIsTabs, className],\n    link: [classNames.link].concat(linkStyles(props), [{\n      selectors: {\n        ':hover::before': {\n          boxSizing: 'border-box',\n          borderBottom: '2px solid transparent'\n        }\n      }\n    }, rootIsTabs && {\n      selectors: {\n        '&:hover, &:focus': {\n          color: palette.black\n        },\n        ':active': {\n          backgroundColor: palette.themePrimary\n        }\n      }\n    }]),\n    linkIsSelected: [classNames.link, classNames.linkIsSelected].concat(linkStyles(props), [{\n      fontWeight: FontWeights.semibold,\n      selectors: (_a = {\n        ':before': {\n          boxSizing: 'border-box',\n          borderBottom: \"2px solid \" + semanticColors.inputBackgroundChecked,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderBottomColor: 'Highlight'\n          }, _b)\n        }\n      }, _a[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _a)\n    }, rootIsTabs && {\n      backgroundColor: palette.themePrimary,\n      color: palette.white,\n      fontWeight: FontWeights.semilight,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: 'transparent',\n          transition: 'none',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          content: '\"\"',\n          height: 'auto'\n        },\n        '&:active, &:hover': {\n          color: palette.white\n        }\n      }, _c[HighContrastSelector] = {\n        fontWeight: FontWeights.semibold,\n        color: 'HighlightText',\n        background: 'Highlight',\n        MsHighContrastAdjust: 'none'\n      }, _c)\n    }]),\n    linkContent: [classNames.linkContent],\n    text: [classNames.text, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    count: [classNames.count, {\n      marginLeft: '4px',\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    icon: [classNames.icon, {\n      selectors: {\n        '& + $text': {\n          marginLeft: '4px'\n        }\n      }\n    }]\n  };\n\n  var _a, _b, _c;\n};","map":null,"metadata":{},"sourceType":"module"}