{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\dialogflow-chatbot\\\\my-app\\\\src\\\\Controls\\\\Chatbot\\\\index.tsx\";\n//@ts-ignore\nimport * as React from \"react\";\nimport { MessagesList } from \"./MessagesList\"; // import './Chatbot.css';\n\nimport { Input } from \"./Input\";\nimport MessageDirection from \"../../Enums/MessageDirection\";\nimport { ApiAiClient } from \"api-ai-javascript\";\nvar client = new ApiAiClient({\n  accessToken: 'ba8b1e5dad804cbfbd1bd9d1fcc08991'\n});\nexport var Chatbot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chatbot, _React$Component);\n\n  function Chatbot(props) {\n    var _this;\n\n    _classCallCheck(this, Chatbot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chatbot).call(this, props));\n\n    _this.onSendMessage = function (message) {\n      var messages = _this.state.messages;\n      messages.push({\n        text: message,\n        member: _this.state.member,\n        direction: MessageDirection.Outgoing\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    client.eventRequest('Welcome').then(function (response) {\n      console.log(response);\n      alert(JSON.stringify(response));\n    }).catch(function (error) {\n      alert('error');\n    });\n    _this.state = {\n      messages: [{\n        text: \"This is a test message!\",\n        member: {\n          username: \"Confession Bot\"\n        },\n        direction: MessageDirection.Incoming\n      }],\n      member: {\n        username: 'Me'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Chatbot, [{\n    key: \"_handleQueryResponse\",\n    value: function _handleQueryResponse() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(MessagesList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onSendMessage: this.onSendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chatbot;\n}(React.Component);","map":{"version":3,"sources":["E:\\Projects\\David MacDougall\\source code\\dialogflow-chatbot\\my-app\\src\\Controls\\Chatbot\\index.tsx"],"names":["React","MessagesList","Input","MessageDirection","ApiAiClient","client","accessToken","Chatbot","props","onSendMessage","message","messages","state","push","text","member","direction","Outgoing","setState","eventRequest","then","response","console","log","alert","JSON","stringify","catch","error","username","Incoming","Component"],"mappings":";;;;;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AAEA,IAAMC,MAAM,GAAG,IAAID,WAAJ,CAAgB;AAACE,EAAAA,WAAW,EAAE;AAAd,CAAhB,CAAf;AAEA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAEI,mBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,iFAAMA,KAAN;;AADoB,UA+BxBC,aA/BwB,GA+BR,UAACC,OAAD,EAAqB;AACjC,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWD,QAA5B;AACAA,MAAAA,QAAQ,CAACE,IAAT,CAAc;AACVC,QAAAA,IAAI,EAAEJ,OADI;AAEVK,QAAAA,MAAM,EAAE,MAAKH,KAAL,CAAWG,MAFT;AAGVC,QAAAA,SAAS,EAAEb,gBAAgB,CAACc;AAHlB,OAAd;;AAKA,YAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,KAvCuB;;AAGpBN,IAAAA,MAAM,CAACc,YAAP,CAAoB,SAApB,EACCC,IADD,CACM,UAACC,QAAD,EAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAD,CAAL;AAAiC,KAHrC,EAICM,KAJD,CAIO,UAACC,KAAD,EAAW;AACdJ,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH,KAND;AAQA,UAAKZ,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,CACN;AACIG,QAAAA,IAAI,EAAE,yBADV;AAEIC,QAAAA,MAAM,EAAE;AACJc,UAAAA,QAAQ,EAAE;AADN,SAFZ;AAKIb,QAAAA,SAAS,EAAEb,gBAAgB,CAAC2B;AALhC,OADM,CADD;AAUTf,MAAAA,MAAM,EAAE;AACJc,QAAAA,QAAQ,EAAE;AADN;AAVC,KAAb;AAXoB;AAyBvB;;AA3BL;AAAA;AAAA,2CA6BkC,CAE7B;AA/BL;AAAA;AAAA,6BA2CiC;AACzB,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWD,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,EAEJ,oBAAC,KAAD;AAAO,QAAA,aAAa,EAAE,KAAKF,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,CAAR;AAIH;AAhDL;;AAAA;AAAA,EAA6BT,KAAK,CAAC+B,SAAnC","sourcesContent":["//@ts-ignore\r\nimport * as React from \"react\";\r\nimport { MessagesList } from \"./MessagesList\";\r\n\r\n// import './Chatbot.css';\r\nimport { Input } from \"./Input\";\r\nimport MessageDirection from \"../../Enums/MessageDirection\";\r\nimport {ApiAiClient} from \"api-ai-javascript\";\r\n\r\nconst client = new ApiAiClient({accessToken: 'ba8b1e5dad804cbfbd1bd9d1fcc08991'})\r\n\r\nexport class Chatbot extends React.Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        client.eventRequest('Welcome')\r\n        .then((response) => {\r\n            console.log(response);\r\n            alert(JSON.stringify(response));})\r\n        .catch((error) => {\r\n            alert('error');\r\n        })\r\n\r\n        this.state = {\r\n            messages: [\r\n                {\r\n                    text: \"This is a test message!\",\r\n                    member: {\r\n                        username: \"Confession Bot\"\r\n                    },\r\n                    direction: MessageDirection.Incoming\r\n                }\r\n            ],\r\n            member: {\r\n                username: 'Me'\r\n            }\r\n        }\r\n    }\r\n\r\n    private _handleQueryResponse(){\r\n        \r\n    }\r\n\r\n    onSendMessage = (message: string) => {\r\n        const messages = this.state.messages\r\n        messages.push({\r\n            text: message,\r\n            member: this.state.member,\r\n            direction: MessageDirection.Outgoing\r\n        })\r\n        this.setState({ messages: messages })\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (<div>\r\n            <MessagesList messages={this.state.messages}></MessagesList>\r\n            <Input onSendMessage={this.onSendMessage}></Input>\r\n        </div>);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}