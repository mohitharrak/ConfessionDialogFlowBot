{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../../Button';\nimport { BaseComponent, customizable, nullRender } from '../../Utilities';\nimport { getStyles } from './FacepileButton.styles';\n\nvar FacepileButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FacepileButton, _super);\n\n  function FacepileButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Tell BaseComponent to bypass resolution of componentRef.\r\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    return _this;\n  }\n\n  FacepileButton.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        styles = _a.styles,\n        rest = tslib_1.__rest(_a, [\"className\", \"styles\"]);\n\n    var customStyles = getStyles(this.props.theme, className, styles);\n    return React.createElement(BaseButton, tslib_1.__assign({}, rest, {\n      variantClassName: \"ms-Button--facepile\",\n      styles: customStyles,\n      onRenderDescription: nullRender\n    }));\n  };\n\n  FacepileButton = tslib_1.__decorate([customizable('FacepileButton', ['theme', 'styles'], true)], FacepileButton);\n  return FacepileButton;\n}(BaseComponent);\n\nexport { FacepileButton };","map":null,"metadata":{},"sourceType":"module"}