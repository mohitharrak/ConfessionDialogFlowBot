{"ast":null,"code":"import { warn } from './warn';\n/**\r\n * Warns when a deprecated props are being used.\r\n *\r\n * @public\r\n * @param componentName - The name of the component being used.\r\n * @param props - The props passed into the component.\r\n * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\r\n * either null or a replacement prop name.\r\n */\n\nexport function warnDeprecations(componentName, props, deprecationMap) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var propName in deprecationMap) {\n      if (props && propName in props) {\n        var deprecationMessage = componentName + \" property '\" + propName + \"' was used but has been deprecated.\";\n        var replacementPropName = deprecationMap[propName];\n\n        if (replacementPropName) {\n          deprecationMessage += \" Use '\" + replacementPropName + \"' instead.\";\n        }\n\n        warn(deprecationMessage);\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}