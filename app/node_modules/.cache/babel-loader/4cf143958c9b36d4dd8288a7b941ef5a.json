{"ast":null,"code":"import { HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check'\n};\nexport var getStyles = function getStyles(props) {\n  var _a = props.checkBoxHeight,\n      checkBoxHeight = _a === void 0 ? '18px' : _a,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var isRTL = getRTL();\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: checkBoxHeight,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: checkBoxHeight,\n    height: checkBoxHeight,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: checkBoxHeight,\n      height: checkBoxHeight,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        },\n\n        /**\r\n         * TODO: Come back to this once .checkHost has been\r\n         * converted to mergeStyles\r\n         */\n        '$checkHost:hover &, $checkHost:focus &, &:hover, &:focus': {\n          opacity: 1\n        }\n      }\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralTertiaryAlt,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralTertiaryAlt,\n      fontSize: '16px',\n      left: isRTL ? '-0.5px' : '.5px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = {\n        MsHighContrastAdjust: 'none'\n      }, _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: [{}]\n  };\n\n  var _b, _c, _d, _e;\n};","map":null,"metadata":{},"sourceType":"module"}