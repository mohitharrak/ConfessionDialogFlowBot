{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport { ValidationState } from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { getStyles } from '../BasePicker.styles';\n\nvar BasePeoplePicker =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BasePeoplePicker, _super);\n\n  function BasePeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BasePeoplePicker;\n}(BasePicker);\n\nexport { BasePeoplePicker };\n\nvar MemberListPeoplePicker =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MemberListPeoplePicker, _super);\n\n  function MemberListPeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MemberListPeoplePicker;\n}(BasePickerListBelow);\n\nexport { MemberListPeoplePicker };\n/**\r\n * Standard People Picker.\r\n */\n\nvar NormalPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(NormalPeoplePickerBase, _super);\n\n  function NormalPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for NormalPeoplePicker. */\n\n\n  NormalPeoplePickerBase.defaultProps = {\n    onRenderItem: function onRenderItem(props) {\n      return React.createElement(PeoplePickerItem, tslib_1.__assign({}, props));\n    },\n    onRenderSuggestionsItem: function onRenderSuggestionsItem(personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return NormalPeoplePickerBase;\n}(BasePeoplePicker);\n\nexport { NormalPeoplePickerBase };\n/**\r\n * Compact layout. It uses personas without secondary text when displaying search results.\r\n */\n\nvar CompactPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CompactPeoplePickerBase, _super);\n\n  function CompactPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for CompactPeoplePicker. */\n\n\n  CompactPeoplePickerBase.defaultProps = {\n    onRenderItem: function onRenderItem(props) {\n      return React.createElement(PeoplePickerItem, tslib_1.__assign({}, props));\n    },\n    onRenderSuggestionsItem: function onRenderSuggestionsItem(personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps,\n        compact: true\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return CompactPeoplePickerBase;\n}(BasePeoplePicker);\n\nexport { CompactPeoplePickerBase };\n/**\r\n * MemberList layout. The selected people show up below the search box.\r\n */\n\nvar ListPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ListPeoplePickerBase, _super);\n\n  function ListPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for ListPeoplePicker. */\n\n\n  ListPeoplePickerBase.defaultProps = {\n    onRenderItem: function onRenderItem(props) {\n      return React.createElement(PeoplePickerItem, tslib_1.__assign({}, props));\n    },\n    onRenderSuggestionsItem: function onRenderSuggestionsItem(personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return ListPeoplePickerBase;\n}(MemberListPeoplePicker);\n\nexport { ListPeoplePickerBase };\nexport function createGenericItem(name, currentValidationState) {\n  var personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState\n  };\n\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n\n  return personaToConvert;\n}\nexport var NormalPeoplePicker = styled(NormalPeoplePickerBase, getStyles, undefined, {\n  scope: 'NormalPeoplePicker'\n});\nexport var CompactPeoplePicker = styled(CompactPeoplePickerBase, getStyles, undefined, {\n  scope: 'CompactPeoplePicker'\n});\nexport var ListPeoplePicker = styled(ListPeoplePickerBase, getStyles, undefined, {\n  scope: 'ListPeoplePickerBase'\n});","map":null,"metadata":{},"sourceType":"module"}