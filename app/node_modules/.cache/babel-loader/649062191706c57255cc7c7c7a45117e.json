{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\David MacDougall\\\\source code\\\\ConfessionDialogFlowBot\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { ApiAiRequestError } from \"../Errors\";\nimport XhrRequest from \"../XhrRequest\";\n\nvar Request =\n/*#__PURE__*/\nfunction () {\n  function Request(apiAiClient, options) {\n    _classCallCheck(this, Request);\n\n    this.apiAiClient = apiAiClient;\n    this.options = options;\n    this.uri = this.apiAiClient.getApiBaseUrl() + \"query?v=\" + this.apiAiClient.getApiVersion();\n    this.requestMethod = XhrRequest.Method.POST;\n    this.headers = {\n      Authorization: \"Bearer \" + this.apiAiClient.getAccessToken()\n    };\n    this.options.lang = this.apiAiClient.getApiLang();\n    this.options.sessionId = this.apiAiClient.getSessionId();\n  }\n\n  _createClass(Request, [{\n    key: \"perform\",\n    value: function perform() {\n      var overrideOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var options = overrideOptions ? overrideOptions : this.options;\n      return XhrRequest.ajax(this.requestMethod, this.uri, options, this.headers).then(Request.handleSuccess.bind(this)).catch(Request.handleError.bind(this));\n    }\n  }], [{\n    key: \"handleSuccess\",\n    value: function handleSuccess(xhr) {\n      return Promise.resolve(JSON.parse(xhr.responseText));\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(xhr) {\n      var error = new ApiAiRequestError(null);\n\n      try {\n        var serverResponse = JSON.parse(xhr.responseText);\n\n        if (serverResponse.status && serverResponse.status.errorDetails) {\n          error = new ApiAiRequestError(serverResponse.status.errorDetails, serverResponse.status.code);\n        } else {\n          error = new ApiAiRequestError(xhr.statusText, xhr.status);\n        }\n      } catch (e) {\n        error = new ApiAiRequestError(xhr.statusText, xhr.status);\n      }\n\n      return Promise.reject(error);\n    }\n  }]);\n\n  return Request;\n}();\n\nexport default Request;","map":null,"metadata":{},"sourceType":"module"}