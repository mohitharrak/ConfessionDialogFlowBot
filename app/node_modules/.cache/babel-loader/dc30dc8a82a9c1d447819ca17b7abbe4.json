{"ast":null,"code":"import { AnimationVariables, DefaultFontStyles, FontSizes, FontWeights, getGlobalClassNames, keyframes } from '../../Styling';\nvar globalClassNames = {\n  root: 'ms-TeachingBubble',\n  body: 'ms-TeachingBubble-body',\n  bodyContent: 'ms-TeachingBubble-bodycontent',\n  closeButton: 'ms-TeachingBubble-closebutton',\n  content: 'ms-TeachingBubble-content',\n  footer: 'ms-TeachingBubble-footer',\n  header: 'ms-TeachingBubble-header',\n  headerIsCondensed: 'ms-TeachingBubble-header--condensed',\n  headerIsSmall: 'ms-TeachingBubble-header--small',\n  headerIsLarge: 'ms-TeachingBubble-header--large',\n  headline: 'ms-TeachingBubble-headline',\n  image: 'ms-TeachingBubble-image',\n  primaryButton: 'ms-TeachingBubble-primaryButton',\n  secondaryButton: 'ms-TeachingBubble-secondaryButton',\n  subText: 'ms-TeachingBubble-subText',\n  // TODO: Button global class name usage should be converted to a styles function once\n  //        Button supports JS styling, which means these button names can be removed.\n  button: 'ms-Button',\n  buttonLabel: 'ms-Button-label'\n};\nvar bounceAnimation = keyframes({\n  '0%': {\n    transform: 'matrix3d(0.5, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '1.7%': {\n    transform: 'matrix3d(0.658, 0, 0, 0, 0, 0.703, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '2.35%': {\n    transform: 'matrix3d(0.725, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '3.4%': {\n    transform: 'matrix3d(0.83, 0, 0, 0, 0, 0.946, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '4.7%': {\n    transform: 'matrix3d(0.942, 0, 0, 0, 0, 1.084, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '5.11%': {\n    transform: 'matrix3d(0.971, 0, 0, 0, 0, 1.113, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '6.81%': {\n    transform: 'matrix3d(1.062, 0, 0, 0, 0, 1.166, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '7.06%': {\n    transform: 'matrix3d(1.07, 0, 0, 0, 0, 1.165, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '8.76%': {\n    transform: 'matrix3d(1.104, 0, 0, 0, 0, 1.12, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '9.36%': {\n    transform: 'matrix3d(1.106, 0, 0, 0, 0, 1.094, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '10.66%': {\n    transform: 'matrix3d(1.098, 0, 0, 0, 0, 1.035, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '12.16%': {\n    transform: 'matrix3d(1.075, 0, 0, 0, 0, 0.98, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '12.61%': {\n    transform: 'matrix3d(1.067, 0, 0, 0, 0, 0.969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '14.51%': {\n    transform: 'matrix3d(1.031, 0, 0, 0, 0, 0.948, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '14.96%': {\n    transform: 'matrix3d(1.024, 0, 0, 0, 0, 0.949, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '17.77%': {\n    transform: 'matrix3d(0.99, 0, 0, 0, 0, 0.981, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '18.37%': {\n    transform: 'matrix3d(0.986, 0, 0, 0, 0, 0.989, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '20.52%': {\n    transform: 'matrix3d(0.98, 0, 0, 0, 0, 1.011, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '22.22%': {\n    transform: 'matrix3d(0.983, 0, 0, 0, 0, 1.016, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '26.08%': {\n    transform: 'matrix3d(0.996, 0, 0, 0, 0, 1.003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '29.93%': {\n    transform: 'matrix3d(1.003, 0, 0, 0, 0, 0.995, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '31.63%': {\n    transform: 'matrix3d(1.004, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '37.64%': {\n    transform: 'matrix3d(1.001, 0, 0, 0, 0, 1.002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '42.74%': {\n    transform: 'matrix3d(0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '45.35%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '49.9%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '50%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '52.15%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '54.3%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '56.46%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '58.61%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '64.16%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '69.72%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '80.83%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '91.99%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  },\n  '100%': {\n    transform: 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)'\n  }\n});\nvar opacityFadeIn = keyframes({\n  '0%': {\n    opacity: 0,\n    animationTimingFunction: AnimationVariables.easeFunction2\n  },\n  '26.26%': {\n    opacity: 1\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n\nvar rootStyle = function rootStyle(isWide) {\n  return [{\n    display: 'block',\n    maxWidth: 364,\n    border: 0,\n    outline: 'transparent',\n    boxShadow: 'none !important',\n    width: 'calc(100% + 1px)',\n    animationName: bounceAnimation + \", \" + opacityFadeIn,\n    animationDuration: '2000ms',\n    animationTimingFunction: 'linear',\n    animationFillMode: 'both'\n  }, isWide && {\n    maxWidth: '456px'\n  }];\n};\n\nvar headerStyle = function headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline) {\n  if (hasCondensedHeadline) {\n    return [classNames.headerIsCondensed];\n  }\n\n  if (hasSmallHeadline) {\n    return [classNames.headerIsSmall, {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: '14px'\n        }\n      }\n    }];\n  } // Large headline is default\n\n\n  return [classNames.headerIsLarge, {\n    selectors: {\n      ':not(:last-child)': {\n        marginBottom: '14px'\n      }\n    }\n  }];\n};\n\nexport var getStyles = function getStyles(props) {\n  var calloutClassName = props.calloutClassName,\n      hasCondensedHeadline = props.hasCondensedHeadline,\n      hasSmallHeadline = props.hasSmallHeadline,\n      isWide = props.isWide,\n      primaryButtonClassName = props.primaryButtonClassName,\n      secondaryButtonClassName = props.secondaryButtonClassName,\n      theme = props.theme;\n  var hasLargeHeadline = !hasCondensedHeadline && !hasSmallHeadline;\n  var palette = theme.palette;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, calloutClassName],\n    body: [classNames.body, {\n      selectors: {\n        ':not(:last-child)': {\n          marginBottom: '20px'\n        }\n      }\n    }],\n    bodyContent: [classNames.bodyContent, {\n      padding: '20px'\n    }, isWide && {\n      maxWidth: '302px'\n    }],\n    closeButton: [classNames.closeButton, {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      color: palette.white,\n      fontSize: FontSizes.small,\n      selectors: {\n        ':hover': {\n          background: 'transparent'\n        }\n      }\n    }],\n    content: [classNames.content].concat(rootStyle(isWide), [isWide && {\n      display: 'flex'\n    }]),\n    footer: [classNames.footer, {\n      display: 'flex',\n      selectors: (_a = {}, // TODO: global class name usage should be converted to a button styles function once Button supports JS styling\n      _a[\".\" + classNames.button + \":not(:first-child)\"] = {\n        marginLeft: '20px'\n      }, _a)\n    }],\n    header: [classNames.header].concat(headerStyle(classNames, hasCondensedHeadline, hasSmallHeadline), [(hasCondensedHeadline || hasSmallHeadline) && [DefaultFontStyles.medium, {\n      marginRight: '10px',\n      fontWeight: FontWeights.semibold\n    }]]),\n    headline: [classNames.headline, {\n      margin: 0,\n      color: palette.white\n    }, hasLargeHeadline && [DefaultFontStyles.xxLarge, {\n      fontWeight: FontWeights.light\n    }]],\n    imageContent: [classNames.header, classNames.image, isWide && {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: '20px',\n      maxWidth: '154px'\n    }],\n    primaryButton: [classNames.primaryButton, primaryButtonClassName, {\n      backgroundColor: palette.white,\n      borderColor: palette.white,\n      whiteSpace: 'nowrap',\n      selectors: (_b = {}, // TODO: global class name usage should be converted to a button styles function once Button supports JS styling\n      _b[\".\" + classNames.buttonLabel] = [DefaultFontStyles.medium, {\n        color: palette.themePrimary\n      }], _b[':hover'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.themeLighter\n      }, _b[':focus'] = {\n        backgroundColor: palette.themeLighter,\n        borderColor: palette.white\n      }, _b[':active'] = {\n        backgroundColor: palette.white,\n        borderColor: palette.white\n      }, _b)\n    }],\n    secondaryButton: [classNames.secondaryButton, secondaryButtonClassName, {\n      backgroundColor: palette.themePrimary,\n      borderColor: palette.white,\n      whiteSpace: 'nowrap',\n      selectors: (_c = {}, // TODO: global class name usage should be converted to a button styles function once Button supports JS styling\n      _c[\".\" + classNames.buttonLabel] = [DefaultFontStyles.medium, {\n        color: palette.white\n      }], _c['&:hover, &:focus'] = {\n        backgroundColor: palette.themeDarkAlt,\n        borderColor: palette.white\n      }, _c[':active'] = {\n        backgroundColor: palette.themePrimary,\n        borderColor: palette.white\n      }, _c)\n    }],\n    subText: [classNames.subText, {\n      margin: 0,\n      fontSize: FontSizes.medium,\n      color: palette.white,\n      fontWeight: FontWeights.semilight\n    }],\n    subComponentStyles: {\n      callout: {\n        root: rootStyle(isWide).concat([theme.fonts.medium]),\n        beak: [{\n          background: palette.themePrimary\n        }],\n        calloutMain: [{\n          background: palette.themePrimary\n        }]\n      }\n    }\n  };\n\n  var _a, _b, _c;\n};","map":null,"metadata":{},"sourceType":"module"}